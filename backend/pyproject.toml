[project]
name = "legal-intel-dashboard"
version = "1.0.0"
description = "Production-grade legal document intelligence platform"
requires-python = ">=3.11"

[tool.ruff]
# Exclude common directories
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "alembic/versions",
    "uploads",
]

# Line length to match Black's default
line-length = 100

# Python version
target-version = "py311"

[tool.ruff.lint]
# Enable pycodestyle (E, W), Pyflakes (F), isort (I), and other rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]

# Ignore specific rules
ignore = [
    "E501",  # Line too long (we use 100 but allow some flexibility)
    "B008",  # Do not perform function calls in argument defaults (FastAPI Depends pattern is standard)
    "B904",  # Within an except clause, raise exceptions with raise ... from err (optional for clarity)
    "N802",  # Property names like DATABASE_URL intentionally uppercase to match env vars
]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__.py files

[tool.ruff.lint.isort]
# Group imports
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = ["app"]
lines-after-imports = 2

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"

# Use Unix-style line endings
line-ending = "lf"

[tool.isort]
# Profile compatible with Black
profile = "black"

# Line length
line_length = 100

# Known first-party modules
known_first_party = ["app"]

# Import heading sections
import_heading_stdlib = "Standard library imports"
import_heading_thirdparty = "Third-party imports"
import_heading_firstparty = "Local application imports"

# Sections
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# Multi-line output mode (3 is vertical hanging indent)
multi_line_output = 3

# Include trailing comma
include_trailing_comma = true

# Force grid wrap
force_grid_wrap = 0

# Use parentheses
use_parentheses = true

# Ensure newline before comments
ensure_newline_before_comments = true

# Lines after imports
lines_after_imports = 2

# Skip files
skip_glob = ["alembic/versions/*", "uploads/*"]
